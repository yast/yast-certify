/**
 * File:
 *   clients/proposal_self_certify.ycp
 *
 * Package:
 *   Configuration of self_certify
 *
 * Summary:
 *   Proposal function dispatcher.
 *
 * Authors:
 *   Ludwig Nussel <lnussel@suse.de>
 *
 * $Id$
 *
 * Proposal function dispatcher for self_certify configuration.
 *
 */

{
    textdomain "self_certify";

    import "Self_certify";
    import "Progress";

    string func  = Args(0);
    map    param = Args(1);
    map    ret   = $[];

    // Make proposal for installation/configuration...
    if ( func == "MakeProposal" )
    {
	boolean force_reset = param["force_reset"]:false;

	// TODO FIXME Call some function that makes a proposal here:
	// TODO FIXME For example:

	// Do not show any progress during Read()
	Progress::off ();
	boolean success = Self_certify::Read ( ``{ return false; } );
	Progress::on ();

	string proposal = Self_certify::Summary ();

	// Fill return map
	// TODO FIXME Write the real values here
	ret =
	    $[ "preformatted_proposal" : proposal, // TODO FIXME
	       "warning"               : _("This is just a self_certify proposal!"), // TODO FIXME
	       "warning_level"         : `blocker // TODO FIXME
	    ];
    }
    // Run an interactive workflow
    else if ( func == "AskUser" )
    {
	boolean has_next = param["has_next"]:false;

	// TODO FIXME Call a function that displays a user dialog
	// TODO FIXME or a sequence of dialogs here:

	any sequence = CallFunction ( `self_certify () );

	// Fill return map
	// TODO FIXME Write the real values here
	ret =
	    $[ "workflow_sequence" : sequence // TODO FIXME
	    ];
    }
    // Return human readable titles for the proposal
    else if ( func == "Description" )
    {
	// Fill return map
	// TODO FIXME Usually just static values. Write them here.
	ret =
	    $[ "rich_text_title" : _( "Self_certify" ),  // TODO FIXME
	       "menu_title"      : _( "&Self_certify" ), // TODO FIXME
	       "id"              : "self_certify_conf"   // TODO FIXME
	    ];
    }

    return ret;
}
